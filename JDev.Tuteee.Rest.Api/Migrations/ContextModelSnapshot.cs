// <auto-generated />
using System;
using JDev.Tuteee.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JDev.Tuteee.Rest.Api.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("JDev.Tuteee.DAL.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClientId"));

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HolderFirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HolderLastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ClientId");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("JDev.Tuteee.DAL.Entities.HomeworkAttachment", b =>
                {
                    b.Property<int>("HomeworkAttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HomeworkAttachmentId"));

                    b.Property<int>("LessonId")
                        .HasColumnType("integer");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("HomeworkAttachmentId");

                    b.HasIndex("LessonId");

                    b.ToTable("HomeworkAttachment", (string)null);
                });

            modelBuilder.Entity("JDev.Tuteee.DAL.Entities.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InvoiceId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<bool>("Paid")
                        .HasColumnType("boolean");

                    b.HasKey("InvoiceId");

                    b.HasIndex("ClientId");

                    b.ToTable("Invoice", (string)null);
                });

            modelBuilder.Entity("JDev.Tuteee.DAL.Entities.Lesson", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LessonId"));

                    b.Property<DateTimeOffset>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HomeworkInstructions")
                        .HasColumnType("text");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TuteeId")
                        .HasColumnType("integer");

                    b.HasKey("LessonId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("TuteeId");

                    b.ToTable("Lesson", (string)null);
                });

            modelBuilder.Entity("JDev.Tuteee.DAL.Entities.Rate", b =>
                {
                    b.Property<int>("RateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RateId"));

                    b.Property<DateTimeOffset>("ActiveFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PencePerHour")
                        .HasColumnType("integer");

                    b.Property<int>("TuteeId")
                        .HasColumnType("integer");

                    b.HasKey("RateId");

                    b.HasIndex("TuteeId");

                    b.ToTable("Rate", (string)null);
                });

            modelBuilder.Entity("JDev.Tuteee.DAL.Entities.Tutee", b =>
                {
                    b.Property<int>("TuteeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TuteeId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TuteeId");

                    b.HasIndex("ClientId");

                    b.ToTable("Tutee", (string)null);
                });

            modelBuilder.Entity("JDev.Tuteee.DAL.Entities.HomeworkAttachment", b =>
                {
                    b.HasOne("JDev.Tuteee.DAL.Entities.Lesson", "Lesson")
                        .WithMany("HomeworkAttachments")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("JDev.Tuteee.DAL.Entities.Invoice", b =>
                {
                    b.HasOne("JDev.Tuteee.DAL.Entities.Client", "Client")
                        .WithMany("Invoices")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("JDev.Tuteee.DAL.Entities.Lesson", b =>
                {
                    b.HasOne("JDev.Tuteee.DAL.Entities.Invoice", "Invoice")
                        .WithMany("Lessons")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("JDev.Tuteee.DAL.Entities.Tutee", "Tutee")
                        .WithMany("Lessons")
                        .HasForeignKey("TuteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Tutee");
                });

            modelBuilder.Entity("JDev.Tuteee.DAL.Entities.Rate", b =>
                {
                    b.HasOne("JDev.Tuteee.DAL.Entities.Tutee", "Tutee")
                        .WithMany("Rates")
                        .HasForeignKey("TuteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tutee");
                });

            modelBuilder.Entity("JDev.Tuteee.DAL.Entities.Tutee", b =>
                {
                    b.HasOne("JDev.Tuteee.DAL.Entities.Client", "Client")
                        .WithMany("Tutees")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("JDev.Tuteee.DAL.Entities.Client", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Tutees");
                });

            modelBuilder.Entity("JDev.Tuteee.DAL.Entities.Invoice", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("JDev.Tuteee.DAL.Entities.Lesson", b =>
                {
                    b.Navigation("HomeworkAttachments");
                });

            modelBuilder.Entity("JDev.Tuteee.DAL.Entities.Tutee", b =>
                {
                    b.Navigation("Lessons");

                    b.Navigation("Rates");
                });
#pragma warning restore 612, 618
        }
    }
}
