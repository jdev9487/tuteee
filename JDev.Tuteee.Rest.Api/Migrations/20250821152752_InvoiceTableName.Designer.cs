// <auto-generated />
using JDev.Tuteee.Rest.Api.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JDev.Tuteee.Rest.Api.Migrations
{
    using DB;

    [DbContext(typeof(Context))]
    [Migration("20250821152752_InvoiceTableName")]
    partial class InvoiceTableName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("JDev.Tuteee.Rest.Api.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HolderFirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HolderLastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ClientId");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("JDev.Tuteee.Rest.Api.Entities.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Paid")
                        .HasColumnType("INTEGER");

                    b.HasKey("InvoiceId");

                    b.HasIndex("ClientId");

                    b.ToTable("Invoice", (string)null);
                });

            modelBuilder.Entity("JDev.Tuteee.Rest.Api.Entities.Lesson", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EndTime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HomeworkInstructions")
                        .HasColumnType("TEXT");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TuteeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LessonId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("TuteeId");

                    b.ToTable("Lesson", (string)null);
                });

            modelBuilder.Entity("JDev.Tuteee.Rest.Api.Entities.Rate", b =>
                {
                    b.Property<int>("RateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActiveFrom")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PencePerHour")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TuteeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RateId");

                    b.HasIndex("TuteeId");

                    b.ToTable("Rate", (string)null);
                });

            modelBuilder.Entity("JDev.Tuteee.Rest.Api.Entities.Tutee", b =>
                {
                    b.Property<int>("TuteeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TuteeId");

                    b.HasIndex("ClientId");

                    b.ToTable("Tutee", (string)null);
                });

            modelBuilder.Entity("JDev.Tuteee.Rest.Api.Entities.Invoice", b =>
                {
                    b.HasOne("JDev.Tuteee.Rest.Api.Entities.Client", "Client")
                        .WithMany("Invoices")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("JDev.Tuteee.Rest.Api.Entities.Lesson", b =>
                {
                    b.HasOne("JDev.Tuteee.Rest.Api.Entities.Invoice", "Invoice")
                        .WithMany("Lessons")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("JDev.Tuteee.Rest.Api.Entities.Tutee", "Tutee")
                        .WithMany("Lessons")
                        .HasForeignKey("TuteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Tutee");
                });

            modelBuilder.Entity("JDev.Tuteee.Rest.Api.Entities.Rate", b =>
                {
                    b.HasOne("JDev.Tuteee.Rest.Api.Entities.Tutee", "Tutee")
                        .WithMany("Rates")
                        .HasForeignKey("TuteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tutee");
                });

            modelBuilder.Entity("JDev.Tuteee.Rest.Api.Entities.Tutee", b =>
                {
                    b.HasOne("JDev.Tuteee.Rest.Api.Entities.Client", "Client")
                        .WithMany("Tutees")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("JDev.Tuteee.Rest.Api.Entities.Client", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Tutees");
                });

            modelBuilder.Entity("JDev.Tuteee.Rest.Api.Entities.Invoice", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("JDev.Tuteee.Rest.Api.Entities.Tutee", b =>
                {
                    b.Navigation("Lessons");

                    b.Navigation("Rates");
                });
#pragma warning restore 612, 618
        }
    }
}
