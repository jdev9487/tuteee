// <auto-generated />
using JDev.Tuteee.Api.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JDev.Tuteee.Api.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250715155609_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("JDev.Tuteee.Api.Entities.Guardian", b =>
                {
                    b.Property<int>("GuardianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GuardianId");

                    b.ToTable("Guardian", (string)null);
                });

            modelBuilder.Entity("JDev.Tuteee.Api.Entities.Homework", b =>
                {
                    b.Property<int>("HomeworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LessonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("HomeworkId");

                    b.HasIndex("LessonId")
                        .IsUnique();

                    b.ToTable("Homework", (string)null);
                });

            modelBuilder.Entity("JDev.Tuteee.Api.Entities.HomeworkAttachment", b =>
                {
                    b.Property<int>("HomeworkAttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("HomeworkId")
                        .HasColumnType("INTEGER");

                    b.HasKey("HomeworkAttachmentId");

                    b.HasIndex("HomeworkId");

                    b.ToTable("HomeworkAttachment", (string)null);
                });

            modelBuilder.Entity("JDev.Tuteee.Api.Entities.Lesson", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EndTime")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StartTime")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TuteeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LessonId");

                    b.HasIndex("TuteeId");

                    b.ToTable("Lesson", (string)null);
                });

            modelBuilder.Entity("JDev.Tuteee.Api.Entities.Rate", b =>
                {
                    b.Property<int>("RateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActiveFrom")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PencePerHour")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TuteeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RateId");

                    b.HasIndex("TuteeId");

                    b.ToTable("Rate", (string)null);
                });

            modelBuilder.Entity("JDev.Tuteee.Api.Entities.Tutee", b =>
                {
                    b.Property<int>("TuteeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GuardianId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TuteeId");

                    b.HasIndex("GuardianId");

                    b.ToTable("Tutee", (string)null);
                });

            modelBuilder.Entity("JDev.Tuteee.Api.Entities.Homework", b =>
                {
                    b.HasOne("JDev.Tuteee.Api.Entities.Lesson", "Lesson")
                        .WithOne("Homework")
                        .HasForeignKey("JDev.Tuteee.Api.Entities.Homework", "LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("JDev.Tuteee.Api.Entities.HomeworkAttachment", b =>
                {
                    b.HasOne("JDev.Tuteee.Api.Entities.Homework", "Homework")
                        .WithMany("HomeworkAttachments")
                        .HasForeignKey("HomeworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Homework");
                });

            modelBuilder.Entity("JDev.Tuteee.Api.Entities.Lesson", b =>
                {
                    b.HasOne("JDev.Tuteee.Api.Entities.Tutee", "Tutee")
                        .WithMany("Lessons")
                        .HasForeignKey("TuteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tutee");
                });

            modelBuilder.Entity("JDev.Tuteee.Api.Entities.Rate", b =>
                {
                    b.HasOne("JDev.Tuteee.Api.Entities.Tutee", "Tutee")
                        .WithMany("Rates")
                        .HasForeignKey("TuteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tutee");
                });

            modelBuilder.Entity("JDev.Tuteee.Api.Entities.Tutee", b =>
                {
                    b.HasOne("JDev.Tuteee.Api.Entities.Guardian", "Guardian")
                        .WithMany("Tutees")
                        .HasForeignKey("GuardianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guardian");
                });

            modelBuilder.Entity("JDev.Tuteee.Api.Entities.Guardian", b =>
                {
                    b.Navigation("Tutees");
                });

            modelBuilder.Entity("JDev.Tuteee.Api.Entities.Homework", b =>
                {
                    b.Navigation("HomeworkAttachments");
                });

            modelBuilder.Entity("JDev.Tuteee.Api.Entities.Lesson", b =>
                {
                    b.Navigation("Homework");
                });

            modelBuilder.Entity("JDev.Tuteee.Api.Entities.Tutee", b =>
                {
                    b.Navigation("Lessons");

                    b.Navigation("Rates");
                });
#pragma warning restore 612, 618
        }
    }
}
